package homework5;

import umontreal.iro.lecuyer.randvar.*;
import umontreal.iro.lecuyer.rng.MRG32k3a;
import umontreal.iro.lecuyer.probdist.*;
public class ex4 {
	public static void main(String[] args)
	{
		MRG32k3a prng = new MRG32k3a();
		GammaGen a = new GammaAcceptanceRejectionGen (prng, 10., 1.0);
		GammaGen b = new GammaAcceptanceRejectionGen(prng.clone(), 10., 1.1);
		GammaDist c = new GammaDist(10, 1.0);
		double v1, v2,v3;
		
		double[] used_u = new double[10];
		
		prng.resetStartStream();
		for(int i = 0; i < 10; i++)
			used_u[i] = prng.nextDouble();
		prng.resetStartStream();
		
		// make sure it's ok
		for(int i =0;i < 10; i++)
			System.out.println(used_u[i]+" " + prng.nextDouble());
		prng.resetStartStream();
		
		//try to see if the avg thing works
		double avg = 0;
		for(double i:used_u)
			avg+=i;
		avg/=10.;
		
		System.out.println(a.nextDouble() + " " + c.inverseF(avg));
		
		
		
		
		/*
		for(int i = 0; i < 100; i++)
		{
			v1= a.nextDouble();
			v2=b.nextDouble();
			v3=c.nextDouble();
			System.out.println(v1 +" " + v2 +" "+ v3 +" "+ v1/v2);
		}
		System.out.println("next");
		
		prng.resetNextSubstream();
		/*
		double v3 = a.nextDouble();
		prng.resetStartStream();
		double u = prng.nextDouble();
		ErlangDist a1 = new ErlangDist(10, 1.0);
		double v4 = a1.inverseF(u);
		System.out.println(v3 + " "+v4);
		*/
		
	}
}
