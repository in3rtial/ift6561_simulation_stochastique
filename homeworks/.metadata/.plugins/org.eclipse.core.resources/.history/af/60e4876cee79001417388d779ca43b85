package homework5;

import umontreal.iro.lecuyer.rng.MRG32k3a;
import umontreal.iro.lecuyer.stat.Tally;

public class ex5 {

	public ex5() {
		
		
	}
	
	public static void main(String[] args)
	{
		// so this is the values we want to try with
		double r = 0.08;     // short rate
		double sigma = 0.2;  // volatility
		double K = 90.;     // strike price
		double s_0 = 99;   // initial price
		double T = 1;        // total time difference
		int s=10;            // number of evenly spaced observations
		int runSize = 10000;
		EuropeanCallOption option = new EuropeanCallOption(r, sigma, K, s_0, T, s);

		// compute the Black-Scholes expectation
		double val = option.getExpectedValue(s_0, K, r, sigma, T);
		System.out.println("Value expected without barrier "+ val);
		double[] barriers = new double[]{0, 75, 80, 90, 95};

		
		// setup the machinery (prng, tallies)
		MRG32k3a prng = new MRG32k3a();
		prng.resetNextSubstream();
		Tally baselineStats = new Tally();
		
		// compute the reference value (no barrier)
		
		option.simulateRunsDownAndIn(2, 129, prng, baselineStats);
		
		
		for(int i = 0; i < barriers.length; i++)
		{
			
		}
			
		Tally statsCMC = new Tally();
		
		
		
		
		
		prng.resetStartSubstream();
		
		option.simulateRunsDownAndInCMC(2, 129, prng, statsCMC);
		
		
		System.out.println(stats.report());
		
		System.out.println(statsCMC.report());
	}

}
